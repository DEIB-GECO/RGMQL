% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/gmql_merge.R
\docType{methods}
\name{aggregate}
\alias{aggregate}
\alias{aggregate,GMQLDataset-method}
\alias{aggregate-method}
\title{Method aggregate}
\usage{
aggregate(x, ...)

\S4method{aggregate}{GMQLDataset}(x, ...)
}
\arguments{
\item{x}{GMQLDataset class object}

\item{...}{Additional arguments for use in specific methods.

list of evalation function to define condition evaluation on metadata:
\itemize{
\item{\code{\link{FN}}: Fullname evaluation, two attributes match 
if they both end with value and, if they have a further prefixes,
the two prefix sequence are identical}
\item{\code{\link{EX}}: Exact evaluation, only attributes exactly 
as value will match; no further prefixes are allowed. }
\item{\code{\link{DF}}: Default evaluation, the two attributes match 
if both end with value.}
}}
}
\value{
DataSet class object. It contains the value to use as input for the
  subsequent GMQL function
}
\description{
Wrapper to GMQL merge function

It builds a dataset consisting of a single sample having as many regions as
the number of regions of the input data and as many metadata as the union of
the 'attribute-value' tuples of the input samples. A groupby clause can be
specified on metadata: the samples are then partitioned in groups, each with
a distinct value of the grouping metadata attributes. The operation is
separately applied to each group, yielding one sample in the result for each
group. Samples whose names are not present in the grouping metadata
parameter are disregarded.
}
\examples{

# It creates a dataset called merged which contains one sample for each
# antibody_target value found within the metadata of the exp dataset sample;
# each created sample contains all regions from all 'exp' samples
# with a specific value for their antibody_target and cell metadata
# attributes.

init_gmql()
test_path <- system.file("example","DATASET",package = "RGMQL")
exp = read_dataset(test_path)
merged = aggregate(exp, DF("antibody_target","cell"))

}
