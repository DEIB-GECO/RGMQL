% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GMQL4TFarm.R
\name{filter_and_extract}
\alias{filter_and_extract}
\title{FILTER AND EXTRACT}
\usage{
filter_and_extract(data, metadata = NULL, metadata_prefix = NULL,
  regions = NULL)
}
\arguments{
\item{metadata}{vector of character containing names of metadata 
to be searched for in metadata files.
data will be extracted if at least one condition is satisfied:
this condition will be logically "ANDed" with prefix filtering (see below)
if NULL no filtering action occured 
(i.e every sample will be taken for regions filtering)}

\item{metadata_prefix}{vector of character that will filter metadata 
containing rispectively every element of this vector.
number of elelment in both vector must match}

\item{regions}{vector of character that will extract only region 
attribute specified; if NULL no regions will be taken and the output 
will be only GRanges made up by the first attribute
(seqnames,start,end,strand)}

\item{GMQL_dataset_path}{string GMQL dataset folder path or GrangesList 
object}
}
\value{
granges with selected regions (if any) in elementMetadata
}
\description{
This function let user to create a new GRangeslist with fixed information: 
seqnames,ranges ans strand and a variable part made up by the regions 
defined as input.
The metadata and metadata_prefix are used to filter the data and choose 
only the samples that match at least one metdatata with its prefix.
The regions are shown for each sample obtained from filtering.
}
\details{
This function works only with datatset or Grangeslist that have the same 
information about regions attribute (but of course different value)
}
\examples{

test_path <- system.file("example", "DATASET", package = "RGMQL")
filter_and_extract(test_path,regions = c("pvalue", "peak"))

grl <- importGMQL.gtf(test_path)
filter_and_extract(grl, regions = c("pvalue", "peak"))


}
