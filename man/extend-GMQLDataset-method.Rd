% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GMQLDataset-class.R, R/Extend.R
\docType{methods}
\name{extend}
\alias{extend}
\alias{extend,}
\alias{GMQLDataset-method}
\alias{extend,GMQLDataset-method}
\alias{extend-method}
\title{Method extend}
\usage{
extend(.data, ...)

\S4method{extend}{GMQLDataset}(.data, ...)
}
\arguments{
\item{.data}{GMQLDataset class object}

\item{...}{Additional arguments for use in specific methods.

This method accept a series of aggregate function on region attribute.
All the element in the form \emph{key} = \emph{aggregate}.
The \emph{aggregate} is an object of class AGGREGATES
The aggregate functions available are: \code{\link{SUM}}, 
\code{\link{COUNT}}, \code{\link{MIN}}, \code{\link{MAX}}, 
\code{\link{AVG}}, \code{\link{MEDIAN}}, \code{\link{STD}}, 
\code{\link{BAG}}, \code{\link{BAGD}}, \code{\link{Q1}}, 
\code{\link{Q2}}, \code{\link{Q3}}.
Every aggregate accepts a string value, execet for COUNT, which does not 
have any value.
Argument of 'aggregate function' must exist in schema, i.e. among region 
attributes. Two style are allowed:
\itemize{
\item list of key-value pairs: e.g. sum = SUM("pvalue")
\item list of values: e.g. SUM("pvalue")
}
"mixed style" is not allowed}
}
\value{
GMQLDataset class object. It contains the value to use as input 
for the subsequent GMQL function
}
\description{
Wrapper to GMQL extend function

It generates new metadata attributes as result of aggregate functions 
applied to sample region attributes and adds them to the existing metadata 
attributes of the sample.
Aggregate functions are applied sample by sample.
}
\examples{

## it counts the regions in each sample and stores their number as value 
## of the new metadata RegionCount attribute of the sample.
init_gmql()
test_path <- system.file("example", "DATASET", package = "RGMQL")
r <- read_dataset(test_path)
e <- extend(r, RegionCount = COUNT())

\dontrun{

## it copies all samples of exp dataset into res dataset, 
## and then calculates for each of them two new metadata attributes:
##  1. RegionCount is the number of sample regions;
##  2. MinP is the minimum pvalue of the sample regions.
## res sample regions are the same as the ones in exp.

init_gmql()
test_path <- system.file("example", "DATASET", package = "RGMQL")
exp = read_dataset(test_path)
res = extend(exp, RegionCount = COUNT(), MinP = MIN("pvalue"))

}
}
