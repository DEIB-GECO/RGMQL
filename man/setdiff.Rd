% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gmql_difference.R
\docType{methods}
\name{setdiff}
\alias{setdiff}
\alias{setdiff,GMQLDataset,GMQLDataset-method}
\title{Method setdiff}
\usage{
\S4method{setdiff}{GMQLDataset,GMQLDataset}(x, y, joinBy = NULL,
  is_exact = FALSE)
}
\arguments{
\item{x}{GMQLDataset class object}

\item{y}{GMQLDataset class object}

\item{joinBy}{list of evalation functions to define evaluation on metadata:
\itemize{
\item{\code{\link{FN}}(value): Fullname evaluation, two attributes match 
if they both end with \emph{value} and, if they have further prefixes,
the two prefix sequence are identical}
\item{\code{\link{EX}}(value): Exact evaluation, only attributes exactly 
as \emph{value} match; no further prefixes are allowed. }
\item{\code{\link{DF}}(value): Default evaluation, the two attributes match 
if both end with \emph{value}.}
}}

\item{is_exact}{single logical value: TRUE means that the region difference 
is executed only on regions in left_input_data with exactly the same 
coordinates of at least one region present in right_input_data; 
if is_exact = FALSE, the difference is executed on all regions in 
left_input_data that overlap with at least one region in right_input_data 
(even just one base).}
}
\value{
GMQLDataset object. It contains the value to use as input 
for the subsequent GMQLDataset method
}
\description{
Wrapper to GMQL DIFFERENCE operator

It produces one sample in the result for each sample of the 
left operand, by keeping the same metadata of the left input sample 
and only those regions (with their schema and values) of the left input 
sample which do not intersect with any region in the right operand sample.
The optional \emph{joinby} clause is used to extract a subset of couples
from the Cartesian product of two dataset \emph{x} and \emph{y} 
on which to apply the DIFFERENCE operator:
only those samples that have the same value for each attribute
are considered when performing the difference.
}
\examples{
## This statement initializes and runs the GMQL server for local execution 
## and creation of results on disk. Then, with system.file() it defines 
## the path to the folders "DATASET" and "DATASET_GDM" in the subdirectory 
## "example" of the package "RGMQL" and opens such folder as a GMQL 
## dataset named "data1" and "data2" respectively using customParser

init_gmql()
test_path <- system.file("example", "DATASET", package = "RGMQL")
test_path2 <- system.file("example", "DATASET_GDM", package = "RGMQL")
data1 = read_dataset(test_path)
data2 = read_dataset(test_path2)

## This GMQL statement returns all the regions in the first dataset 
## that do not overlap any region in the second dataset.

out = setdiff(data1, data2)

## This GMQL statement extracts for every pair of samples s1 in EXP1 
## and s2 in EXP2 having the same value of the metadata 
## attribute 'antibody_target' the regions that appear in s1 but 
## do not overlap any region in s2; 
## metadata of the result are the same as the metadata of s1.

out_t = setdiff(data1, data2, DF("antibody_target"))

}
