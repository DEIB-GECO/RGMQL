% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Read.R
\name{readDataset}
\alias{readDataset}
\title{GMQL Function: READ}
\usage{
readDataset(dataset, parser = "CustomParser", is_local = TRUE,
  is_GMQL = TRUE)
}
\arguments{
\item{dataset}{single string folder path for GMQL dataset or datasetname on repository}

\item{parser}{single string used to parsing dataset files
The Parser's available are:
\itemize{
\item{BedParser}
\item{ANNParser}
\item{BroadProjParser}
\item{BedParser}
\item{NarrowPeakParser}
\item{RnaSeqParser}
\item{CustomParser.}
}
Default is CustomParser.}

\item{is_local}{single logical value indicating local or remote dataset}

\item{is_GMQL}{single logical value indicating if dataset is GMQL dataset or not}
}
\value{
DAGgraph class object. It contains the value associated to the graph used 
as input for the subsequent GMQL function
}
\description{
Read a GMQL dataset or any other folder containig some homogenus sample
from disk, saving in Scala memory that can be referenced in R
Also used to read a repository dataset in case of remote processing.
}
\details{
Normally a GMQL dataset contains an XML schema file that contains
name of column header. (e.g chr, start, stop, strand)
The CustomParser read this XML schema; if you already know what kind of schema your files are use one of
the parser defined without reading any XML schema
}
\examples{

### local with CustomParser
initGMQL("gtf")
test_path <- system.file("example","DATA_SET_VAR_GTF",package = "RGMQL")
r = readDataset(test_path)

\dontrun{

### local with other Parser
initGMQL("gtf")
test_path <- system.file("example","DATA_SET_VAR_GTF",package = "RGMQL")
r = readDataset(test_path,"ANNParser")
}

}
