% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/gmql_order.R
\docType{methods}
\name{arrange}
\alias{arrange}
\alias{arrange,GMQLDataset-method}
\alias{sort-method}
\title{Method arrange}
\usage{
arrange(.data, metadata_ordering = NULL, regions_ordering = NULL,
  fetch_opt = NULL, num_fetch = 0, reg_fetch_opt = NULL,
  reg_num_fetch = 0, ...)

\S4method{arrange}{GMQLDataset}(.data, metadata_ordering = NULL,
  regions_ordering = NULL, fetch_opt = NULL, num_fetch = 0,
  reg_fetch_opt = NULL, reg_num_fetch = 0, ...)
}
\arguments{
\item{.data}{GMQLDataset class object}

\item{metadata_ordering}{list of ordering function contains name of 
metadata.
The function available are: \code{\link{ASC}}, \code{\link{DESC}}}

\item{regions_ordering}{list of ordering function contains 
name of region schema value.
The function available are: \code{\link{ASC}}, \code{\link{DESC}}.}

\item{fetch_opt}{string indicating the option used to fetch the 
first k sample:
\itemize{
\item{mtop: it fetch the first k sample}
\item{mtopp: it fetch the first k sample in each group.}
\item{mtopg: it fetch the percentage of sample.}
}
if NULL, \emph{num_fetch} is not considered}

\item{num_fetch}{integer value identifying the number of region to fetch
by default is 0, that's means all sample are fetched
s}

\item{reg_fetch_opt}{string indicating the option used to fetch the 
first k regions:
\itemize{
\item{rtop: it fetch the first k regions.}
\item{rtopp: it fetch the first k regions in each group.}
\item{rtopg: it fetch the percentage of regions.}
}
if NULL, \emph{reg_num_fetch} is not considered}

\item{reg_num_fetch}{integer value identifying the number of region to fetch
by default is 0, that's means all regions are fetched}

\item{...}{Additional arguments for use in specific methods.}
}
\value{
GMQLDataset object. It contains the value to use as input 
for the subsequent GMQLDataset method
}
\description{
Wrapper to GMQL order function

It is used to order either samples or sample regions or both, according to 
a set of metadata and/or region attributes, and/or region coordinates.
Order can be specified as ascending / descending for every attribute
The number of samples and their regions remain the same 
(unless fetching options are specified) but a new ordering metadata 
and/or region attribute is added.
Sorted samples or regions have a new attribute "order", 
added to either metadata, or regions, or both of them as specified in inputs
}
\examples{

## It orders the samples according to the Region_count metadata attribute 
## and takes the two samples that have the highest count. 

init_gmql()
test_path <- system.file("example","DATASET",package = "RGMQL")
r = read_dataset(test_path)
o = arrange(r, list(ASC("Region_Count")),fetch_opt = "mtop",num_fetch = 2)


}
