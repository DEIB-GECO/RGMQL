% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cover.R
\name{histogram}
\alias{histogram}
\title{GMQL Operation: HISTOGRAM}
\usage{
histogram(input_data, minAcc, maxAcc, groupBy = NULL, aggregates = NULL)
}
\arguments{
\item{input_data}{returned object from any GMQL function}

\item{minAcc}{minimum number of overlapping regions to be considered during execution
normally is a single integer number, declared also as string.
minAcc accept ALL and string like (ALL+N)/K as special keyword 
ALL sets the minimum to the number of samples in the input dataset}

\item{maxAcc}{maximum number of overlapping regions to be considered during execution
normally is a single integer number, declared also as string.
maxAcc accept ALL, ANY and string like (ALL+N)/K as special keyword 
ALL sets the maximum to the number of samples in the input dataset
ANY acts as a wildcard, consider all areas defined to any amount of overlapping}

\item{groupBy}{list of CONDITION objects, or simple string concatenation 
(i.e c("cell_type","attribute_tag","size")).
Every object contains the name of metadata to be used in \emph{groupby}.
For details of CONDITION objects see:
\code{\link{DEF}}, \code{\link{FULL}}, \code{\link{EXACT}}

Every condition accepts only one string value. (e.g. DEF("cell_type") )
In case of single concatenation with no CONDITION, all metadata are considering as DEF}

\item{aggregates}{list of element in the form \emph{key} = \emph{function_aggregate}.
The \emph{function_aggregate} is an object of class OPERATOR
The aggregate functions available are: \code{\link{MIN}}, \code{\link{MAX}},
\code{\link{SUM}}, \code{\link{BAG}}, \code{\link{AVG}}, \code{\link{COUNT}},
\code{\link{STD}}, \code{\link{MEDIAN}}, \code{\link{Q1}}, \code{\link{Q2}}, 
\code{\link{Q3}}.
Every operator accepts a string value, execet for COUNT that cannot have a value.
Argument of 'function_aggregate' must exist in schema
Two style are allowed:
\itemize{
\item list of key-value pairs: e.g. sum = SUM("pvalue")
\item list of values: e.g. SUM("pvalue")
}
"mixed style" is not allowed}
}
\value{
DAGgraph class object. It contains the value associated to the graph used 
as input for the subsequent GMQL function
}
\description{
returns the non-overlapping regions contributing to the cover,
each with its accumulation index value, which is assigned to the AccIndex region attribute.
}
\examples{

## This GMQL statement computes the result grouping the input \\emph{exp} samples 
## by the values of their \\emph{cell} metadata attribute, 
## thus one output \\emph{res} sample is generated for each cell type. 
## Output regions are produced by dividing results from COVER in contiguous subregions 
## according to the varying accumulation values (from 2 to 4 in this case): 
## one region for each accumulation value;

initGMQL("gtf")
test_path <- system.file("example","DATA_SET_VAR_GTF",package = "GMQL")
exp = readDataset(test_path)
res = histogram(exp, 2,4,groupBy = c("cell"))

}
\references{
\url{http://www.bioinformatics.deib.polimi.it/genomic_computing/GMQL/doc/GMQLUserTutorial.pdf}
}
\seealso{
\code{\link{flat}} \code{\link{cover}} \code{\link{summit}}
}
