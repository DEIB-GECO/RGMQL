% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Project.R
\name{project}
\alias{project}
\title{GMQL Operation: PROJECT}
\usage{
project(input_data, metadata = NULL, regions = NULL,
  regions_update = NULL, metadata_update = NULL, all_but = FALSE)
}
\arguments{
\item{input_data}{string pointer taken from GMQL function}

\item{metadata}{vector of string made up by metadata attribute}

\item{regions_update}{single string predicate}

\item{all_but}{logical value indicating which schema filed attribute you want to exclude.
If FALSE only the regions you choose is kept in the output of the project operation,
if TRUE the schema region are all except ones include in region parameter.
if regions is not defined all_but is not considerd.}

\item{region}{vector of string made up by schema field attribute}
}
\value{
"url-like" string
}
\description{
It creates, from an existing dataset, a new dataset with all the samples from input dataset
but keeping for each sample in the input dataset only those metadata and/or region attributes
expressed in the operator parameter list.
Region coordinates and values of the remaining metadata remain equal to those in the input dataset.
It allows to:
\itemize{
\item{Remove existing metadata and/or region attributes from a dataset}
\item{Create new metadata and/or region attributes in the result}
}
}
\examples{
\dontrun{

initGMQL("gtf")
test_path <- system.file("example","DATA_SET_VAR_GTF",package = "GMQL")
r = read(test_path)

### preserving all region attributes and creating a new region attribute called length
p = project(input_data = r,regions_update="length AS right - left")

### preserving all region attributes apart from  score, and creating a new region attribute called new_score
p = project(input_data = r, regions = "score" regions_update="length AS right - left", all_but=TRUE)

### output dataset that contains the same samples as the input dataset. Each output sample only contains,
### as region attributes, the four basic coordinates (chr, left, right, strand)
### and the specified region attributes and as metadata attributes only the specified ones
p = project(input_data = r, regions = c("variant_classification", "variant_type"),
metadata = c("manually_curated","tissue_status", "tumor_ta") )
}
""
}
\references{
\url{http://www.bioinformatics.deib.polimi.it/genomic_computing/GMQL/doc/GMQLUserTutorial.pdf}
}
